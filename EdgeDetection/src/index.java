
import java.awt.Graphics;
import java.awt.image.BufferedImage;
import java.io.BufferedReader;
import java.io.StringReader;
import javax.imageio.ImageIO;
import javax.swing.JFileChooser;
import javax.swing.JPanel;
import javax.swing.filechooser.FileNameExtensionFilter;

/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * index.java
 *
 * Created on 29/Mai/2011, 23:40:58
 */
/**
 *
 * @author Goncalo
 */
public class index extends javax.swing.JFrame {

    private BufferedImage imagemOriginal;
    private BufferedImage imagemEdge;
    private double[][] mask;
    private float[] k_mask;

    /** Creates new form index */
    public index() {
        initComponents();
    }

    private void readMask() {
        String str = "";
        txtMask.setText(txtMask.getText().trim());
        mask = new double[txtMask.getLineCount()][];
        try {
            BufferedReader in = new BufferedReader(new StringReader(txtMask.getText()));
            int y = 0;
            while ((str = in.readLine()) != null) {
                String[] elem = str.split(" ");
                mask[y] = new double[elem.length];
                for (int x = 0; x < elem.length; x++) {
                    mask[y][x] = Double.parseDouble(elem[x]);
                }
                y++;
            }
            k_mask = new float[mask.length * mask[0].length];
            for (int yy = 0; yy < mask.length; yy++) {
                for (int xx = 0; xx < mask[yy].length; xx++) {
                    k_mask[yy * mask[yy].length + xx] = (int) mask[yy][xx];
                }
            }
        } catch (Exception e) {
        }
    }

    private void insertImage(BufferedImage img, JPanel jpanel) {
        try {
            Graphics g = jpanel.getGraphics();
            g.setColor(jpanel.getBackground());
            g.fillRect(0, 0, jpanel.getWidth(), jpanel.getWidth());
            if ((img.getWidth() > jpanel.getWidth()) || (img.getHeight() > jpanel.getHeight())) {
                g.drawImage(img, 0, 0, jpanel.getWidth(), jpanel.getHeight(), jpanel);
            } else {
                g.drawImage(img, 0, 0, jpanel);
            }
        } catch (Exception ex) {
        }
    }

    public BufferedImage cloneImage(BufferedImage image) {
        return new BufferedImage(image.getColorModel(), image.copyData(null), image.isAlphaPremultiplied(), null);
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        pImagem = new javax.swing.JPanel();
        jPanel1 = new javax.swing.JPanel();
        btApply = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        txtMask = new javax.swing.JTextArea();
        cbOptions = new javax.swing.JComboBox();
        btLoadImg = new javax.swing.JButton();
        btSaveImg = new javax.swing.JButton();
        btReApply = new javax.swing.JButton();
        jSeparator1 = new javax.swing.JSeparator();
        tresholdTxt = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        cbRotate = new javax.swing.JCheckBox();
        cbTreshold = new javax.swing.JCheckBox();
        jPanel2 = new javax.swing.JPanel();
        btCanny = new javax.swing.JButton();
        txtLowTresh = new javax.swing.JTextField();
        txtHighTresh = new javax.swing.JTextField();
        txtKWidth = new javax.swing.JTextField();
        txtKRadius = new javax.swing.JTextField();
        cbNormalize = new javax.swing.JCheckBox();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        pImagem.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        pImagem.setLayout(new java.awt.GridLayout(1, 0));

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder("Menu"));

        btApply.setText("Apply");
        btApply.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btApplyActionPerformed(evt);
            }
        });

        txtMask.setColumns(12);
        txtMask.setFont(new java.awt.Font("Courier New", 0, 14));
        txtMask.setLineWrap(true);
        txtMask.setRows(1);
        txtMask.setText("-1 -1 -1\n0 0 0\n1 1 1\n");
        jScrollPane1.setViewportView(txtMask);

        cbOptions.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Default filter", "Smoothing", "Sharpening", "Raised", "Motion-blur", "Edge Detection" }));
        cbOptions.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cbOptionsItemStateChanged(evt);
            }
        });

        btLoadImg.setText("Open Image");
        btLoadImg.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btLoadImgActionPerformed(evt);
            }
        });

        btSaveImg.setText("Save Image");
        btSaveImg.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btSaveImgActionPerformed(evt);
            }
        });

        btReApply.setText("Re-Apply");
        btReApply.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btReApplyActionPerformed(evt);
            }
        });

        tresholdTxt.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        tresholdTxt.setText("255");
        tresholdTxt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tresholdTxtActionPerformed(evt);
            }
        });

        jLabel1.setText("Treshold");

        cbRotate.setText("Rotate mask?");

        cbTreshold.setText("Apply treshold?");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(cbRotate)
                        .addContainerGap())
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(jPanel1Layout.createSequentialGroup()
                            .addComponent(cbTreshold)
                            .addContainerGap())
                        .addGroup(jPanel1Layout.createSequentialGroup()
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(jSeparator1, javax.swing.GroupLayout.DEFAULT_SIZE, 101, Short.MAX_VALUE)
                                .addComponent(btSaveImg, javax.swing.GroupLayout.DEFAULT_SIZE, 101, Short.MAX_VALUE)
                                .addComponent(btLoadImg, javax.swing.GroupLayout.DEFAULT_SIZE, 101, Short.MAX_VALUE))
                            .addGap(14, 14, 14))
                        .addGroup(jPanel1Layout.createSequentialGroup()
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(btApply, javax.swing.GroupLayout.DEFAULT_SIZE, 101, Short.MAX_VALUE)
                                .addComponent(btReApply, javax.swing.GroupLayout.DEFAULT_SIZE, 101, Short.MAX_VALUE))
                            .addGap(14, 14, 14))
                        .addGroup(jPanel1Layout.createSequentialGroup()
                            .addComponent(jLabel1)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(tresholdTxt, javax.swing.GroupLayout.DEFAULT_SIZE, 56, Short.MAX_VALUE)
                            .addGap(14, 14, 14))
                        .addGroup(jPanel1Layout.createSequentialGroup()
                            .addComponent(cbOptions, 0, 0, Short.MAX_VALUE)
                            .addGap(14, 14, 14))
                        .addGroup(jPanel1Layout.createSequentialGroup()
                            .addComponent(jScrollPane1, 0, 0, Short.MAX_VALUE)
                            .addGap(14, 14, 14)))))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(btLoadImg)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btSaveImg)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 3, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(tresholdTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(cbTreshold)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(cbOptions, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 89, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(cbRotate)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 29, Short.MAX_VALUE)
                .addComponent(btApply)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btReApply)
                .addGap(33, 33, 33))
        );

        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder("Canny"));

        btCanny.setText("Apply");
        btCanny.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btCannyActionPerformed(evt);
            }
        });

        txtLowTresh.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        txtLowTresh.setText("0.36");
        txtLowTresh.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtLowTreshActionPerformed(evt);
            }
        });

        txtHighTresh.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        txtHighTresh.setText("2.5");

        txtKWidth.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        txtKWidth.setText("12");

        txtKRadius.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        txtKRadius.setText("3.3");

        cbNormalize.setSelected(true);
        cbNormalize.setText("Norm. Contrast?");

        jLabel2.setText("Low Treshold");

        jLabel3.setText("High Treshold");

        jLabel4.setText("Kernel Width");

        jLabel5.setText("Kernel Radius");

        jButton1.setText("jButton1");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setText("jButton2");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(cbNormalize, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel3)
                            .addComponent(jLabel4)
                            .addComponent(jLabel5))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(txtKRadius, javax.swing.GroupLayout.Alignment.TRAILING, 0, 0, Short.MAX_VALUE)
                            .addComponent(txtKWidth, javax.swing.GroupLayout.Alignment.TRAILING, 0, 0, Short.MAX_VALUE)
                            .addComponent(txtHighTresh, javax.swing.GroupLayout.Alignment.TRAILING, 0, 0, Short.MAX_VALUE)
                            .addComponent(txtLowTresh, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 36, Short.MAX_VALUE))))
                .addContainerGap())
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addGap(22, 22, 22)
                .addComponent(btCanny, javax.swing.GroupLayout.DEFAULT_SIZE, 84, Short.MAX_VALUE)
                .addGap(19, 19, 19))
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jButton1)
                .addContainerGap(42, Short.MAX_VALUE))
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jButton2)
                .addContainerGap(42, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(29, 29, 29)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(txtLowTresh, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtHighTresh, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtKWidth, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtKRadius, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel5))
                .addGap(7, 7, 7)
                .addComponent(cbNormalize)
                .addGap(18, 18, 18)
                .addComponent(btCanny)
                .addGap(18, 18, 18)
                .addComponent(jButton1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jButton2)
                .addContainerGap(105, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(pImagem, javax.swing.GroupLayout.PREFERRED_SIZE, 550, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(27, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel1, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(pImagem, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 400, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void cbOptionsItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cbOptionsItemStateChanged
        int Selection;
        Selection = cbOptions.getSelectedIndex();
        if (Selection == 0) {
            txtMask.setText("1 0 -1\n" + "2 0 -2\n" + "1 0 -1");
        } else if (Selection == 1) {
            txtMask.setText("1 1 1\n" + "1 2 1\n" + "1 1 1");
        } else if (Selection == 2) {
            txtMask.setText("-1 -1 -1\n" + "-1 9 -1\n" + "-1 -1 -1");
        } else if (Selection == 3) {
            txtMask.setText("0 0 -2\n" + "0 2 0\n" + "1 0 0");
        } else if (Selection == 4) {
            txtMask.setText("0 0 1\n" + "0 0 0\n" + "1 0 0");
        } else if (Selection == 5) {
            txtMask.setText("-1 -1 -1\n" + "-1 8 -1\n" + "-1 -1 -1");
        }
}//GEN-LAST:event_cbOptionsItemStateChanged

    private void btApplyActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btApplyActionPerformed

        readMask();
        FilterEdge detector = new FilterEdge(cloneImage(imagemOriginal), mask);
        detector.setRotate(cbRotate.isSelected());
        detector.setUseTresh(cbTreshold.isSelected());
        detector.setTreshold(Integer.parseInt(tresholdTxt.getText()));
        detector.start();
        imagemEdge = detector.getEdgeImg();
        insertImage(cloneImage(imagemEdge), pImagem);
//        try {
//            ImageIO.write(imagemEdge, "JPG", new File("egde1111111111111111111111111111.jpg"));
//        } catch (IOException ex) {
//        }
    }//GEN-LAST:event_btApplyActionPerformed

    private void btLoadImgActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btLoadImgActionPerformed
        JFileChooser chooser = new JFileChooser();
        FileNameExtensionFilter filter = new FileNameExtensionFilter("Images", "jpg", "gif", "png");
        chooser.setFileFilter(filter);
        int returnVal = chooser.showOpenDialog(this);
        if (returnVal == JFileChooser.APPROVE_OPTION) {
            try {
                imagemOriginal = ImageIO.read(chooser.getSelectedFile());
            } catch (Exception ex) {
            }
            insertImage(cloneImage(imagemOriginal), pImagem);
        }
}//GEN-LAST:event_btLoadImgActionPerformed

    private void btSaveImgActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btSaveImgActionPerformed
        JFileChooser chooser = new JFileChooser();
        FileNameExtensionFilter filter = new FileNameExtensionFilter("Images", "jpg", "gif", "png");
        chooser.setFileFilter(filter);
        int returnVal = chooser.showSaveDialog(this);
        if (returnVal == JFileChooser.APPROVE_OPTION) {
            try {
                ImageIO.write(imagemEdge, "PNG", chooser.getSelectedFile());
            } catch (Exception ex) {
            }
        }
}//GEN-LAST:event_btSaveImgActionPerformed

    private void btReApplyActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btReApplyActionPerformed

        readMask();

        FilterEdge detector = new FilterEdge(cloneImage(imagemEdge), mask);
        detector.setRotate(cbRotate.isSelected());
        detector.setUseTresh(cbTreshold.isSelected());
        detector.setTreshold(Integer.parseInt(tresholdTxt.getText()));
        detector.start();
        imagemEdge = detector.getEdgeImg();
        insertImage(cloneImage(imagemEdge), pImagem);
//        try {
//            ImageIO.write(imagemEdge, "JPG", new File("egde1111111111111111111111111111.jpg"));
//        } catch (IOException ex) {
//        }
    }//GEN-LAST:event_btReApplyActionPerformed

    private void tresholdTxtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tresholdTxtActionPerformed
        if (Integer.parseInt(tresholdTxt.getText()) > 255) {
            tresholdTxt.setText("255");
        } else if (Integer.parseInt(tresholdTxt.getText()) < 0) {
            tresholdTxt.setText("0");
        }

    }//GEN-LAST:event_tresholdTxtActionPerformed

    private void btCannyActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btCannyActionPerformed
        Canny detector = new Canny();
        //adjust its parameters as desired
        detector.setLowThreshold(new Float(txtLowTresh.getText()));
        detector.setHighThreshold(new Float(txtHighTresh.getText()));
        detector.setGaussianKernelWidth(Integer.parseInt(txtKWidth.getText()));
        detector.setGaussianKernelRadius(new Float(txtKRadius.getText()));
        detector.setContrastNormalized(cbNormalize.isSelected());

        //apply it to an image
        detector.setSourceImage(cloneImage(imagemOriginal));
        detector.process();
        imagemEdge = detector.getEdgesImage();
        insertImage(cloneImage(imagemEdge), pImagem);
    }//GEN-LAST:event_btCannyActionPerformed

    private void txtLowTreshActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtLowTreshActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtLowTreshActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        Canny detector = new Canny();
        //adjust its parameters as desired
        detector.setLowThreshold(new Float(txtLowTresh.getText()));
        detector.setHighThreshold(new Float(txtHighTresh.getText()));
        detector.setGaussianKernelWidth(Integer.parseInt(txtKWidth.getText()));
        detector.setGaussianKernelRadius(new Float(txtKRadius.getText()));
        detector.setContrastNormalized(cbNormalize.isSelected());

        //apply it to an image
        detector.setSourceImage(cloneImage(imagemOriginal));
        detector.process();
        imagemEdge = detector.getEdgesImage2();
        insertImage(cloneImage(imagemEdge), pImagem);
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed

       
    }//GEN-LAST:event_jButton2ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        java.awt.EventQueue.invokeLater(new Runnable() {

            public void run() {
                new index().setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btApply;
    private javax.swing.JButton btCanny;
    private javax.swing.JButton btLoadImg;
    private javax.swing.JButton btReApply;
    private javax.swing.JButton btSaveImg;
    private javax.swing.JCheckBox cbNormalize;
    private javax.swing.JComboBox cbOptions;
    private javax.swing.JCheckBox cbRotate;
    private javax.swing.JCheckBox cbTreshold;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JPanel pImagem;
    private javax.swing.JTextField tresholdTxt;
    private javax.swing.JTextField txtHighTresh;
    private javax.swing.JTextField txtKRadius;
    private javax.swing.JTextField txtKWidth;
    private javax.swing.JTextField txtLowTresh;
    private javax.swing.JTextArea txtMask;
    // End of variables declaration//GEN-END:variables
}
